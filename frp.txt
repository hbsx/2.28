更新系统

apt update -y  && apt upgrade -y && apt install -y curl wget sudo socat

安装docker

curl -fsSL https://get.docker.com | sh

curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

chmod +x /usr/local/bin/docker-compose
--------------------------------------------------------------------------------------------------------------------------------------------


apt update -y  # 升级packages

apt install wget curl sudo vim git -y  # Debian系统比较干净，安装常用的软件

设置一下SWAP
wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh && chmod +x box.sh && clear && ./box.sh

Docker部署
wget -qO- get.docker.com | bash

systemctl enable docker  # 设置开机自动启动

非大陆服务器Docker-compose安装

curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

chmod +x /usr/local/bin/docker-compose

systemctl enable docker  # 设置开机自动启动

systemctl restart docker


创建frp.toml文件并创建目录
mkdir -p /etc/frp
vim /frp/frps.toml

frps.toml配置
bindPort = 7000
auth.method = "token"
auth.token = "8ad3d1x429a2d"

webServer.addr = "0.0.0.0"
webServer.port = 7500
webServer.user = "root"
webServer.password = "root1"

log.to = "./frps.log"
log.level = "info"
log.maxDays = 3


拉取镜像
docker pull snowdreamtech/frps:latest
启动docker容器
docker run --restart=always --network host -d -v /etc/frp/frps.toml:/etc/frp/frps.toml --name frps snowdreamtech/frps


客户端配置

创建frp.toml文件并创建目录
mkdir /etc/frp
vim /frp/frpc.toml

frpc.toml配置
# frpc.toml
transport.tls.enable = true        # 从 v0.50.0版本开始，transport.tls.enable的默认值为 true
serverAddr = "45.42.*.*"
serverPort = 7000                 # 公网服务端通信端口
auth.token = "8ad3d1x429a2d"             # 令牌，与公网服务端保持一致

[[proxies]]
name = "ik"
type = "tcp"
localIP = "192.168.1.250"            # 需要暴露的服务的IP
localPort = 80                # 将本地9000端口的服务暴露在公网的6060端口
remotePort = 6025                 # 暴露服务的公网入口

[[proxies]]
name = "op"
type = "tcp"
localIP = "192.168.1.240"
localPort = 80
remotePort = 6024


[[proxies]]
name = "ql"
type = "tcp"
localIP = "192.168.1.200"
localPort = 5700
remotePort = 6000

[[proxies]]
name = "pve"
type = "tcp"
localIP = "192.168.1.210"
localPort = 8006
remotePort = 6021

[[proxies]]
name = "qunhui"
type = "tcp"
localIP = "192.168.1.100"
localPort = 5000
remotePort = 6010

[[proxies]]
name = "jellyfin"
type = "tcp"
localIP = "192.168.1.100"
localPort = 8096
remotePort = 6011

[[proxies]]
name = "clash"
type = "tcp"
localIP = "192.168.1.240"
localPort = 9090
remotePort = 6090


拉取镜像
docker pull snowdreamtech/frpc:latest
启动docker容器
docker run --restart=always --network host -d -v /etc/frp/frpc.toml:/etc/frp/frpc.toml --name frpc snowdreamtech/frpc


===============================================================================================

开启BBR


# 第一项检查：
root@topvps:~# sysctl net.ipv4.tcp_available_congestion_control | grep bbr

# 若已开启bbr，结果通常为以下两种：
net.ipv4.tcp_available_congestion_control = bbr cubic reno
net.ipv4.tcp_available_congestion_control = reno cubic bbr

# 第二项检查：
root@topvps:~# sysctl net.ipv4.tcp_congestion_control | grep bbr
# 若已开启bbr，结果如下：
net.ipv4.tcp_congestion_control = bbr

# 第三项检查：
root@topvps:~# sysctl net.core.default_qdisc | grep fq
# 若已开启bbr，结果如下：
net.core.default_qdisc = fq

# 第四项检查：
root@topvps:~# lsmod | grep bbr
# 若已开启bbr，结果可能如下。并不是所有的 VPS 都会有此返回值，若没有也属正常。
tcp_bbr                20480  2

若上面的检查发现当前的内核没有开启bbr，可以执行以下命令一键安装、启用：

wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh && chmod +x bbr.sh && ./bbr.sh

注意：脚本不支持OpenVZ。

---------- System Information ----------
 OS      : Ubuntu 18.04.2 LTS
 Arch    : x86_64 (64 Bit)
 Kernel  : 4.15.0-50-generic
----------------------------------------
 Auto install latest kernel for TCP BBR

 URL: https://teddysun.com/489.html
----------------------------------------

Press any key to start...or Press Ctrl+C to cancel

Info: Your kernel version is greater than 4.9, directly setting TCP BBR...
Info: Setting TCP BBR completed...
root@qly-hk:~# lsmod | grep bbr
tcp_bbr                20480  1


==============================================================================================

我们的演示服务器是一台香港的Debian服务器，配置是1核1G，公网IP是154.91.177.93。

首先，我们通过SSH登录到服务器。

由于此服务器系统的软件源配置有问题，我们将恢复到官方源。

将sources.list文件修改为以下内容

mv /etc/apt/sources.list /etc/apt/sources.list.old
cat > /etc/apt/sources.list << EOF
deb http://deb.debian.org/debian/ bullseye main contrib non-free
deb-src http://deb.debian.org/debian/ bullseye main contrib non-free
deb http://deb.debian.org/debian/ bullseye-updates main contrib non-free
deb-src http://deb.debian.org/debian/ bullseye-updates main contrib non-free
deb http://deb.debian.org/debian/ bullseye-backports main contrib non-free
deb-src http://deb.debian.org/debian/ bullseye-backports main contrib non-free
deb http://deb.debian.org/debian-security/ bullseye-security main contrib non-free
deb-src http://deb.debian.org/debian-security/ bullseye-security main contrib non-free
EOF

然后更新系统。

apt update -y

使用LinuxMirrors提供的Docker安装脚本，拷贝粘贴。

bash <(curl -sSL https://linuxmirrors.cn/docker.sh)
回车运行。选择y，安装最新的版本； 因为是香港的服务器，所以选官方1； 选择香港的注册源，17；

等待安装完成，安装完成。

=====================================================================================================

docker-compose 方式搭建frp

mkdir /www/dk_project/frps
cd /www/dk_project/frps


新建docker-compose.yml文件，输入vi docker-compose.yml。

vi docker-compose.yml
拷贝yaml内容，粘贴；保存文件。

version: '3.3'
services:
  frps:
    container_name: frps # 容器名称
    image: snowdreamtech/frps # 容器映像
    restart: always # 永远重启
    network_mode: host # 网络：主机模式
    volumes:
      - './frps.toml:/etc/frp/frps.toml' # 配置文件  

新建frps.toml文件，输入vi frps.toml。

vi frps.toml
粘贴frps.toml内容。

此文件配置了服务器端口值，以及Token的字符串值，请保存这些值以供它处使用。

bindPort = 93 # 绑定端口
auth.token = "MyToken123456"

运行Frp服务器端容器

docker compose up -d
等待拉取镜像，拉取镜像完成，容器运行成功



客户端搭建

创建Frpc目录，并转到此目录。

mkdir -p /root/dk/frpc
cd /root/dk/frpc

新建docker-compose.yml文件，输入vi docker-compose.yml。

vi docker-compose.yml

拷贝yaml内容，粘贴；保存文件

version: '3.3'
services:
  frps:
    container_name: frpc # 容器名称
    image: snowdreamtech/frpc # 容器映像
    restart: always # 永远重启
    network_mode: host # 网络：主机模式
    volumes:
      - './frpc.toml:/etc/frp/frpc.toml' # 配置文件  


新建frpc.toml文件，输入vi frpc.toml。

vi frpc.toml

粘贴frpc.toml内容。其中，

serverAddr填入服务器的IP；serverPort填入服务器的端口；token输入与服务器同样的字符；

余下就是两个服务的定义：

一个是SSH和NAS服务。请按照实际情况填写，在保存。

# frpc.toml
serverAddr = "154.91.177.93" # 服务器IP
serverPort = 93 # 服务器端口
auth.token = "MyToken123456" # Token

[[proxies]]
name = "ssh" # 服务名称
type = "tcp" # 服务类型
localIP = "127.0.0.1"  # 本地IP
localPort = 223 # 本地端口
remotePort = 94  # 远程端口

[[proxies]]
name = "nas" # 服务名称
type = "tcp" # 服务类型
localIP = "127.0.0.1" # 本地IP
localPort = 50603 # 本地端口
remotePort = 95 # 远程端口

运行Frp客户端容器

docker-compose up -d

等待拉取镜像，拉取镜像完成，容器运行成功











